{"ast":null,"code":"var _jsxFileName = \"/Users/hiroki/test/generative-nft-library/Polygon-Generative-NFT/nft-collectible-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport contract from \"./contracts/NFTCollectible.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nconst abi = contract.abi;\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\");\n    }\n  };\n\n  const connectWalletHandler = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      alert(\"Please install MetaMask!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Found an account! Address: \", accoiunts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const mintNftHandler = () => {};\n\n  const connectWalletButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  };\n\n  const mintNftButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintNftHandler,\n      className: \"cta-button mint-nft-button\",\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scrappy Squirrels Tutorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: connectWalletButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vg9h9hqTAVJVjklrPXRRIAqzLN0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","contract","contractAddress","abi","App","currentAccount","setCurrentAccount","checkWalletIsConnected","ethereum","window","console","log","connectWalletHandler","alert","accounts","request","method","accoiunts","err","mintNftHandler","connectWalletButton","mintNftButton"],"sources":["/Users/hiroki/test/generative-nft-library/Polygon-Generative-NFT/nft-collectible-frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport contract from \"./contracts/NFTCollectible.json\";\n\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nconst abi = contract.abi;\n\nfunction App() {\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const checkWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\");\n    }\n  };\n\n  const connectWalletHandler = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      alert(\"Please install MetaMask!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n      console.log(\"Found an account! Address: \", accoiunts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const mintNftHandler = () => {};\n\n  const connectWalletButton = () => {\n    return (\n      <button\n        onClick={connectWalletHandler}\n        className=\"cta-button connect-wallet-button\"\n      >\n        Connect Wallet\n      </button>\n    );\n  };\n\n  const mintNftButton = () => {\n    return (\n      <button onClick={mintNftHandler} className=\"cta-button mint-nft-button\">\n        Mint NFT\n      </button>\n    );\n  };\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, []);\n\n  return (\n    <div className=\"main-app\">\n      <h1>Scrappy Squirrels Tutorial</h1>\n      <div>{connectWalletButton()}</div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,MAAMC,eAAe,GAAG,4CAAxB;AACA,MAAMC,GAAG,GAAGF,QAAQ,CAACE,GAArB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,IAAD,CAApD;;EACA,MAAMO,sBAAsB,GAAG,YAAY;IACzC,MAAM;MAAEC;IAAF,IAAeC,MAArB;;IAEA,IAAI,CAACD,QAAL,EAAe;MACbE,OAAO,CAACC,GAAR,CAAY,wCAAZ;MACA;IACD,CAHD,MAGO;MACLD,OAAO,CAACC,GAAR,CAAY,mCAAZ;IACD;EACF,CATD;;EAWA,MAAMC,oBAAoB,GAAG,YAAY;IACvC,MAAM;MAAEJ;IAAF,IAAeC,MAArB;;IAEA,IAAI,CAACD,QAAL,EAAe;MACbK,KAAK,CAAC,0BAAD,CAAL;IACD;;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,OAAT,CAAiB;QAAEC,MAAM,EAAE;MAAV,CAAjB,CAAvB;MACAN,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CM,SAAS,CAAC,CAAD,CAApD;MACAX,iBAAiB,CAACQ,QAAQ,CAAC,CAAD,CAAT,CAAjB;IACD,CAJD,CAIE,OAAOI,GAAP,EAAY;MACZR,OAAO,CAACC,GAAR,CAAYO,GAAZ;IACD;EACF,CAdD;;EAgBA,MAAMC,cAAc,GAAG,MAAM,CAAE,CAA/B;;EAEA,MAAMC,mBAAmB,GAAG,MAAM;IAChC,oBACE;MACE,OAAO,EAAER,oBADX;MAEE,SAAS,EAAC,kCAFZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAQD,CATD;;EAWA,MAAMS,aAAa,GAAG,MAAM;IAC1B,oBACE;MAAQ,OAAO,EAAEF,cAAjB;MAAiC,SAAS,EAAC,4BAA3C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CAND;;EAQApB,SAAS,CAAC,MAAM;IACdQ,sBAAsB;EACvB,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAMa,mBAAmB;IAAzB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GA5DQhB,G;;KAAAA,G;AA8DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}